/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
  \file			dockcmdlog.cc
  \date			Apr 2013
  \author		TNick

  \brief		Contains the implementation of DockCmdLog class


*//*


 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Please read COPYING and README files in root folder
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include	"dockcmdlog.h"
#include	"cmdlog.h"
#include	"mw.h"

/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

using namespace april;
using namespace april::Gui;

namespace   april	{

namespace	Gui		{

//! implementation class
/**
 * @internal
 */
class	DockCmdLog_p : public CmdLog		{
public:

	//! constructor
	DockCmdLog_p( QWidget * w ) : CmdLog( w )
	{}

};

}   //  namespace   Gui

}   //  namespace   april


/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  DATA    ---------------------------------------------------------------- */

/*  DATA    ================================================================ */
//
//
//
//
/*  CLASS    --------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
DockCmdLog::DockCmdLog	( MW * mw )
	: Dock( mw, "Command  Log" ),
	  d_( NULL )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
DockCmdLog::~DockCmdLog	( void )
{
	APRDBG_CDTOR;
	if ( d_ != NULL )
	{
		deconstruct();
	}
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
void				DockCmdLog::construct			( void )
{
	if ( d_ != NULL )
	{
		deconstruct();
	}
	d_ = new DockCmdLog_p( dock() );
	dock()->setWidget( d_ );
	connect( static_cast<CmdLog*>(d_), SIGNAL(appClose()),
			mainWindow(), SLOT( close() ) );
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
void				DockCmdLog::deconstruct			( void )
{
	
	delete d_;
	d_ = NULL;
}
/* ========================================================================= */

/*  CLASS    =============================================================== */
//
//
//
//
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
