/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
  \file			eventfactory.cc
  \date			Apr 2013
  \author		TNick

  \brief		Contains the implementation of EventFactory class


*//*


 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Please read COPYING and README files in root folder
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include	"eventfactory.h"
#include	"world.h"


/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

using namespace april;

/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  DATA    ---------------------------------------------------------------- */

/*  DATA    ================================================================ */
//
//
//
//
/*  CLASS    --------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
EventFactory::EventFactory	( World * w )
	: Factory( w )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
EventFactory::~EventFactory	( void )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
bool				EventFactory::addMyself			( ID id )
{
	Q_ASSERT( id != InvalidId );
	return world()->addEventFactory( this, id );
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
bool				EventFactory::save				( QSettings & stg ) const
{
	
	return true;
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
bool				EventFactory::load				( QSettings & stg )
{
	
	
	return true;
}
/* ========================================================================= */

/*  CLASS    =============================================================== */
//
//
//
//
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
