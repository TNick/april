/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
  \file			worldfactory.cc
  \date			Apr 2013
  \author		TNick

  \brief		Contains the implementation of WorldFactory class


*//*


 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Please read COPYING and README files in root folder
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include	"worldfactory.h"
#include	"world.h"
#include	<april/aprillibrary.h>

/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

using namespace april;

#define FUNC_ENTRY	APRDBG_FUNC(APRDBG_FW)

/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  DATA    ---------------------------------------------------------------- */

/*  DATA    ================================================================ */
//
//
//
//
/*  CLASS    --------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
WorldFactory::WorldFactory	( const QString & s )
	: Factory( NULL )
{
	APRDBG_CDTOR;
	AprilLibrary::addWorldFactory( s, this );
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
WorldFactory::~WorldFactory	( void )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
World *				WorldFactory::create		(
		const QString & s, quint64 tot_energ )
{ FUNC_ENTRY;
	Q_UNUSED( s );
	return new World( QString(), tot_energ );
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
World *				WorldFactory::create		( QSettings & stg )
{ FUNC_ENTRY;

	World * w = new World( "", 0 );
	if ( w->load( stg ) == false )
	{
		DEC_REF(w,w);
		AprilLibrary::remWorld( w );
		return NULL;
	}
	return w;
}
/* ========================================================================= */

/*  CLASS    =============================================================== */
//
//
//
//
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
