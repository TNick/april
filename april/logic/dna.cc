/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
  \file			dna.cc
  \date			Apr 2013
  \author		TNick

  \brief		Contains the implementation of DNA class


*//*


 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Please read COPYING and README files in root folder
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include	"dna.h"


/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

using namespace april;

/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  DATA    ---------------------------------------------------------------- */

/*  DATA    ================================================================ */
//
//
//
//
/*  CLASS    --------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
DNA::DNA	( void )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
DNA::~DNA	( void )
{
	APRDBG_CDTOR;
	/* stub */
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
int				DNA::findID			( ID id ) const
{
	int i_max = parts_.count();
	for ( int i = 0; i < i_max; i++ )
	{
		if ( parts_.at( i ).id_ == id )
		{
			return i;
		}
	}
	return -1;
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
void		DNA::fromMerge	( const DNA & p1, const DNA & p2 )
{
	
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
DNAView		DNA::getView(ID id)
{
	DNAView		view(this,InvalidId);
	
	int i = findID( id );
	if ( i == -1 )
		return view;
	
	view.setIdentificator( id );
	view.setBegin( parts_.at( i ).start_ );
	view.setCount( parts_.at( i ).count_ );
	
	return view;
}
/* ========================================================================= */

/*  CLASS    =============================================================== */
//
//
//
//
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
